#
# Carrick coding style
# uncrustify -c uncrustify.cfg --no-backup $(find . -name "*.[ch]")
#

indent_with_tabs		= 0		# 1=indent to level only, 2=indent with tabs
input_tab_size			= 2		# original tab size
output_tab_size			= 2		# new tab size
indent_columns			= 2
indent_align_string		= True		# align broken strings
indent_brace			= 2

nl_enum_brace			= remove	# "enum {" vs "enum \n {"
nl_union_brace			= remove	# "union {" vs "union \n {"
nl_struct_brace			= add	# "struct {" vs "struct \n {"
nl_do_brace			= add		# "do {" vs "do \n {"
nl_if_brace			= add		# "if () {" vs "if () \n {"
nl_for_brace			= add		# "for () {" vs "for () \n {"
nl_else_brace			= add		# "else {" vs "else \n {"
nl_while_brace			= add		# "while () {" vs "while () \n {"
nl_switch_brace			= add		# "switch () {" vs "switch () \n {"
nl_func_var_def_blk		= 1
nl_before_case			= 1
nl_fcall_brace			= add		# "foo() {" vs "foo()\n{"
nl_fdef_brace			= add		# "int foo() {" vs "int foo()\n{"
nl_brace_while			= remove
nl_brace_else			= add
nl_squeeze_ifdef		= TRUE

sp_before_semi			= remove
sp_paren_paren			= add	# space between (( and ))
sp_return_paren			= add	# "return (1);" vs "return(1);"
sp_sizeof_paren			= add	# "sizeof (int)" vs "sizeof(int)"
sp_before_sparen		= add		# "if (" vs "if("
sp_after_sparen			= add		# "if () {" vs "if (){"
sp_after_cast			= add	# "(int) a" vs "(int)a"
sp_inside_braces		= add		# "{ 1 }" vs "{1}"
sp_inside_braces_struct		= add		# "{ 1 }" vs "{1}"
sp_inside_braces_enum		= add		# "{ 1 }" vs "{1}"
sp_inside_paren			= remove
sp_inside_fparen		= remove
sp_inside_sparen		= remove
sp_paren_paren = remove
sp_assign			= force
sp_arith			= force
sp_bool				= force
sp_compare			= force
sp_after_comma			= force
sp_func_def_paren		= force	# "int foo (){" vs "int foo(){"
sp_func_call_paren		= force	# "foo (" vs "foo("
sp_func_proto_paren		= force	# "int foo ();" vs "int foo();"

align_func_params = TRUE
align_var_def_span = 1
align_var_def_star_style = 2
align_var_def_amp_style = 2
align_var_struct_span = 1
align_var_struct_thresh = 4
align_struct_init_span = 1
align_var_def_colon = TRUE
align_var_def_inline = TRUE

eat_blanks_before_close_brace	= TRUE
eat_blanks_after_open_brace	= TRUE

